<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAABx2AAAcdgAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA4AAAAYAAAAGAAAABkAAAAZAAAAGQAAABkAAAAZAAAAGQAA
        ABkAAAAZAAAAGQAAABkAAAAZAAAAGQAAABkAAAAZAAAAGQAAABkAAAAYAAAAGAAAAA4AAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAAAAAALAAAA0QAAAOAAAADUAAAA0wAAANMAAADTAAAA0wAA
        ANMAAADTAAAA0wAAANMAAADTAAAA0wAAANMAAADTAAAA0wAAANMAAADTAAAA0wAAANQAAADgAAAA0QAA
        AAsAAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAABAAAAAAAAABUAAADeAAAAKQAAABwAAAAuAAAALAAA
        ACwAAAAtAAAALQAAACwAAAAsAAAALAAAACwAAAAsAAAALAAAACwAAAAsAAAALAAAACwAAAAuAAAAHAAA
        ACkAAADeAAAAFQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAFgAAANgAAAAhAAAAygAA
        AN4AAADWAAAA2gAAANMAAADTAAAA2gAAANgAAADWAAAA1wAAANgAAADYAAAA2AAAANgAAADYAAAA1QAA
        AN8AAADKAAAAIQAAANgAAAAWAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAAAAAAXAAAA1wAA
        ACwAAADYAAAALQAAABAAAAAGAAAAJAAAACQAAAAFAAAAFQAAABgAAAAVAAAAEQAAABEAAAARAAAAEQAA
        ABQAAAASAAAALAAAANgAAAAsAAAA1wAAABcAAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAABAAAAAAAA
        ABcAAADXAAAAKwAAANYAAAAWAAAAAAAAAJoAAADeAAAA3gAAAJYAAAAEAAAAAAAAAAUAAAASAAAAEQAA
        ABEAAAASAAAADgAAAAAAAAAXAAAA1QAAACsAAADXAAAAFwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAA
        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
        ugvQAAAL0AAAC9AAAAvQAAALyAAAE9KQCUs=
</value>
  </data>
</root>